name: 'SonarCloud'

on:
  push:
    branches:
      - master
    paths:
      - 'user-service/**'
      - '.github/workflows/**'
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - develop
    paths:
      - 'user-service/**'
      - '.github/workflows/**'
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'
      - name: Setup Application Test Yaml
        uses: microsoft/variable-substitution@v1
        with:
          files: user-service/src/main/resources/application-test.yml
        env:
          spring.data.redis.host: ${{ secrets.DOCS_SERVER_US_REDIS_HOST }}
          spring.security.oauth2.client.registration.google.client-id: ${{ secrets.GOOGLE_CLIENT_ID }}
          spring.security.oauth2.client.registration.google.client-secret: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          spring.security.oauth2.client.registration.naver.client-id: ${{ secrets.NAVER_CLIENT_ID }}
          spring.security.oauth2.client.registration.naver.client-secret: ${{ secrets.NAVER_CLIENT_SECRET }}
          spring.security.oauth2.client.registration.kakao.client-id: ${{ secrets.KAKAO_CLIENT_ID }}
          spring.security.oauth2.client.registration.kakao.client-secret: ${{ secrets.KAKAO_CLIENT_SECRET }}
          spring.security.oauth2.client.registration.apple.client-id: ${{ secrets.APPLE_CLIENT_ID }}
          spring.security.oauth2.client.registration.apple.client-secret: ${{ secrets.APPLE_CLIENT_SECRET }}
          spring.cloud.aws.credentials.access-key: ${{ secrets.AWS_ACCESS_KEY }}
          spring.cloud.aws.credentials.secret-key: ${{ secrets.AWS_SECRET_KEY }}
          spring.cloud.openfeign.client.config.bookClient.url: ${{ secrets.BOOK_CLIENT_URL }}
          jwt.secretKey: ${{ secrets.JWT_SECRET_KEY }}
          spring.cloud.aws.sns.credentials.access-key: ${{ secrets.AWS_SNS_ACCESS_KEY }}
          spring.cloud.aws.sns.credentials.secret-key: ${{ secrets.AWS_SNS_SECRET_KEY }}
          spring.cloud.aws.sns.region.static: ${{ secrets.AWS_SNS_REGION }}
          spring.cloud.aws.sns.topic.arn: ${{ secrets.AWS_SNS_TOPIC_ARN }}
      - name: Setup Bootstrap Yaml
        uses: microsoft/variable-substitution@v1
        with:
          files: user-service/src/main/resources/bootstrap.yml
        env:
          spring.profiles.active: test
      - name: Set up Apple PrivateKey
        working-directory: user-service
        run: |
          mkdir -p src/main/resources/apple
          echo -e ${{ secrets.APPLE_AUTH_PRIVATE_KEY }} > src/main/resources/apple/AuthKey_8LCJC23RYD.p8
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build and analyze
        working-directory: user-service
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonar --info